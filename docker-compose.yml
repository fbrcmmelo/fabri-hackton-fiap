services:
  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./srv-api-gateway/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - com-fabri-network

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./srv-api-gateway/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - com-fabri-network
  
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=myuser
      - RABBITMQ_DEFAULT_PASS=secret
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - com-fabri-network
    volumes:
      - rabbitmq-data:/data/rabbit-mq
  
  srv-api-gateway:
    container_name: srv-api-gateway
    build:
      context: ./srv-api-gateway/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - com-fabri-network
    restart: always
    depends_on:
      - srv-services-registry
    environment:
      - EUREKA_HOSTNAME=http://srv-services-registry:8761/eureka/
      - PORT=8080
    volumes:
      - srv-api-gateway-data:/data/api-gateway

  srv-services-registry:
    container_name: srv-services-registry
    build:
      context: ./srv-services-registry/
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - com-fabri-network
    restart: always
    volumes:
      - srv-services-registry-data:/data/services-registry

  srv-message-broker:
    container_name: srv-message-broker
    build:
      context: ./srv-message-broker/
      dockerfile: Dockerfile
    networks:
      - com-fabri-network
    restart: always
    depends_on:
      - rabbitmq
      - srv-services-registry
    environment:
      - EUREKA_HOSTNAME=http://srv-services-registry:8761/eureka/
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_USERNAME=myuser
      - RABBITMQ_PASS=secret
    volumes:
      - srv-message-broker-data:/data/message-broker

  srv-notification:
    container_name: srv-notification
    build:
      context: ./srv-notification/
      dockerfile: Dockerfile
    networks:
      - com-fabri-network
    restart: always
    depends_on:
      - srv-services-registry
      - rabbitmq
      - srv-message-broker
    environment:
      - EUREKA_HOSTNAME=http://srv-services-registry:8761/eureka/
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_USERNAME=myuser
      - RABBITMQ_PASS=secret
    volumes:
      - srv-notification-data:/data/notification

  srv-oauth:
    container_name: srv-oauth
    build:
      context: ./srv-oauth/
      dockerfile: Dockerfile
    networks:
      - com-fabri-network
    restart: always
    depends_on:
      - srv-services-registry
    environment:
      - EUREKA_HOSTNAME=http://srv-services-registry:8761/eureka/
    volumes:
      - srv-oauth-data:/data/oauth

  srv-user:
    container_name: srv-user
    build:
      context: ./srv-user/
      dockerfile: Dockerfile
    networks:
        - com-fabri-network
    restart: always
    depends_on:
      - srv-services-registry
      - db-user
      - rabbitmq
      - srv-message-broker
    environment:
        - RABBITMQ_HOSTNAME=rabbitmq
        - RABBITMQ_USERNAME=myuser
        - RABBITMQ_PASS=secret
        - EUREKA_HOSTNAME=http://srv-services-registry:8761/eureka/
        - POSTGRES_HOSTNAME=db-user
        - POSTGRES_PORT=5432
        - POSTGRES_DB=user_db
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
    volumes:
        - srv-user-data:/data/user

  db-user:
    image: postgres:15.4
    container_name: db-user
    ports:
      - "5432:5432"
    networks:
      - com-fabri-network
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=user_db
    volumes:
      - db-user-data:/var/lib/postgresql/data

  srv-appointment:
    container_name: srv-appointment
    build:
      context: ./srv-appointment
      dockerfile: Dockerfile
    networks:
      - com-fabri-network
    restart: always
    depends_on:
      - srv-services-registry
      - db-appointment
      - rabbitmq
      - srv-message-broker
    volumes:
      - srv-appointment-data:/data/appointment
    environment:
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_USERNAME=myuser
      - RABBITMQ_PASS=secret
      - EUREKA_HOSTNAME=http://srv-services-registry:8761/eureka/
      - POSTGRES_HOSTNAME=db-appointment
      - POSTGRES_PORT=5432
      - POSTGRES_DB=appointment_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  db-appointment:
    image: postgres:15.4
    container_name: db-appointment
    ports:
      - "5433:5432"
    networks:
      - com-fabri-network
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=appointment_db
    volumes:
      - db-appointment-data:/var/lib/postgresql/data

  srv-phr:
    container_name: srv-phr
    build:
      context: ./srv-patient-history-registry/
      dockerfile: Dockerfile
    networks:
      - com-fabri-network
    restart: always
    depends_on:
      - srv-services-registry
      - db-phr
      - rabbitmq
      - srv-message-broker
    environment:
      - EUREKA_HOSTNAME=http://srv-services-registry:8761/eureka/
      - MONGODB_HOSTNAME=db-phr
      - MONGODB_PORT=27020
      - MONGODB_USERNAME=root
      - MONGODB_PASS=rootpass
      - MONGODB_DATABASE=phr_db
    volumes:
      - srv-phr-data:/data/patient-history-registry

  db-phr:
    image: mongo:latest
    container_name: db-phr
    ports:
      - "27020:27017"  # Mapeia a porta 27019 do host para a porta 27017 do container
    volumes:
      - db-patient-history-registry-data:/data/db  # Volume para persistir os dados do banco de dados
    environment:
      - MONGO_INITDB_DATABASE_NAME=phr_db  # Nome do banco de dados
      - MONGO_INITDB_ROOT_USERNAME=root  # Defina o nome de usuário root
      - MONGO_INITDB_ROOT_PASSWORD=rootpass  # Defina a senha para o usuário root
    networks:
      - com-fabri-network

networks:
  com-fabri-network:

volumes:
  srv-api-gateway-data:
  srv-services-registry-data:
  rabbitmq-data:
  srv-message-broker-data:
  srv-notification-data:
  srv-oauth-data:
  srv-user-data:
  db-user-data:
  srv-phr-data:
  db-patient-history-registry-data:
  srv-appointment-data:
  db-appointment-data:
